/**
 * Javadoc
 * 
 * @author Ludo
 * @since 31/03/2018
 */

package lsmcu;

public enum Inputs {
	// Bytes 0 to 100 are reserved for coding CP pressure*10 in bars.
	LSMCU_OUT_ZBA_ON,
	LSMCU_OUT_ZBA_OFF,
	LSMCU_OUT_RSEC_ON,
	LSMCU_OUT_RSEC_OFF,
	LSMCU_OUT_ZDV_ON,
	LSMCU_OUT_ZDV_OFF,
	LSMCU_OUT_ZPT_BACK_UP,
	LSMCU_OUT_ZPT_BACK_DOWN,
	LSMCU_OUT_ZPT_FRONT_UP,
	LSMCU_OUT_ZPT_FRONT_DOWN,
	LSMCU_OUT_ZDJ_OFF,
	LSMCU_OUT_ZEN_ON,
	LSMCU_OUT_ZCA_ON,
	LSMCU_OUT_ZCA_OFF,
	LSMCU_OUT_ZCD_ON,
	LSMCU_OUT_ZCD_OFF,
	LSMCU_OUT_FPB_ON,
	LSMCU_OUT_FPB_OFF,
	LSMCU_OUT_FPB_APPLY,
	LSMCU_OUT_FPB_NEUTRAL,
	LSMCU_OUT_FPB_RELEASE,
	LSMCU_OUT_BPGD,
	LSMCU_OUT_ZVM_ON,
	LSMCU_OUT_ZVM_OFF,
	LSMCU_OUT_INV_FORWARD,
	LSMCU_OUT_INV_NEUTRAL,
	LSMCU_OUT_INV_BACKWARD,
	LSMCU_OUT_MP_0,
	LSMCU_OUT_MP_T_MORE,
	LSMCU_OUT_MP_T_LESS,
	LSMCU_OUT_MP_F_MORE,
	LSMCU_OUT_MP_F_LESS,
	LSMCU_OUT_MP_PR,
	LSMCU_OUT_MP_P,
	LSMCU_OUT_FD_APPLY,
	LSMCU_OUT_FD_NEUTRAL,
	LSMCU_OUT_FD_RELEASE,
	LSMCU_OUT_BPURG,
	LSMCU_OUT_S_HIGH_TONE,
	LSMCU_OUT_S_LOW_TONE,
	LSMCU_OUT_S_NEUTRAL,
	LSMCU_OUT_BPEV_ON,
	LSMCU_OUT_BPEV_OFF,
	LSMCU_OUT_BPSA_ON,
	LSMCU_OUT_BPSA_OFF,
	LSMCU_OUT_ZFG_ON,
	LSMCU_OUT_ZFG_OFF,
	LSMCU_OUT_ZFD_ON,
	LSMCU_OUT_ZFD_OFF,
	LSMCU_OUT_ZPR_ON,
	LSMCU_OUT_ZPR_OFF,
	LSMCU_OUT_ZLFRG_ON,
	LSMCU_OUT_ZLFRG_OFF,
	LSMCU_OUT_ZLFRD_ON,
	LSMCU_OUT_ZLFRD_OFF,
	LSMCU_OUT_ACSF_ON,
	LSMCU_OUT_ACSF_OFF,
	LSMCU_OUT_KVB_BPVAL_ON,
	LSMCU_OUT_KVB_BPVAL_OFF,
	LSMCU_OUT_KVB_BPMV_ON,
	LSMCU_OUT_KVB_BPMV_OFF,
	LSMCU_OUT_KVB_BPFC_ON,
	LSMCU_OUT_KVB_BPFC_OFF,
	LSMCU_OUT_KVB_BPTEST_ON,
	LSMCU_OUT_KVB_BPTEST_OFF,
	LSMCU_OUT_KVB_BPSF_ON,
	LSMCU_OUT_KVB_BPSF_OFF;
	
	/* Data members */
	private final int commandNumber;
	private static final int CP_MAX_VALUE_DECIBARS = 100;
	
	private static class CommandCounterHolder {
		// Bytes 0 to 100 are reserved for coding CP pressure*10 in bars.
		private static int commandCounter = CP_MAX_VALUE_DECIBARS + 1;
	}
	
	/* CONSTRUCTOR OF EACH ELEMENT OF ENUMERATION.
	 * @param:	None.
	 * @return:	None.
	 */
	private Inputs() {
		commandNumber = CommandCounterHolder.commandCounter;
		CommandCounterHolder.commandCounter++;
	}
	
	/* GET THE ENUMERATION ITEM NUMBER.
	 * @param:					None.
	 * @return commandNumber:	Command number.
	 */
	public final int getNumber() {
		return commandNumber;
	}
}
